<MudPaper Class="row" Elevation="3">
    <br />
    @if (Cargando)
    {
        <div class="col-12 text-center">
            <div class="spinner-border" role="status">
                <span class="sr-only">...</span>
            </div>
        </div>
    }
    else
    {
        <div class="col-md-12 col-lg-12 col-xl-12">
            <div class="row">
                <div class="col-md-12 col-lg-12 col-xl-3 mt-3">
                    <MudTextField id="nuevoNombrePresentacion" Variant="Variant.Outlined" @bind-Value="Formato.NombreFormato" />
                </div>
                <div class="col-md-12 col-lg-12 col-xl-3 mt-3">
                    <MudNumericField @bind-Value="Formato.UnidadPorFormato" Label="Cantidad por formato" Min="0" Variant="Variant.Outlined" Step="1" />
                </div>
                <div class="col-md-12 col-lg-12 col-xl-6 mt-3">
                    <div class="row">
                        <div class="col-6 text-center">
                            <MudFab Color="Color.Info" Icon="@Icons.Material.Filled.Refresh" OnClick="EditarFormato" Label="Editar"></MudFab>
                        </div>
                        <div class="col-6 text-center">
                            <MudFab Color="Color.Error" Icon="@Icons.Material.Filled.Delete" OnClick="@(() => EliminarFormato.InvokeAsync(Formato))" Label="Borrar"></MudFab>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row mb-1">
                <div class="col-md-12 col-lg-12 col-xl-6"></div>
                <div class="col-md-12 col-lg-12 col-xl-6"></div>
            </div>
            <div class="row mb-1">
                <div class="col-md-12 col-lg-12 col-xl-6"></div>
                <div class="col-md-12 col-lg-12 col-xl-6"></div>
            </div>
        </div>
    }
</MudPaper>
<br />
@code {
    protected bool Cargando = false;

    [Parameter] public Formato Formato { get; set; }
    [Parameter] public EventCallback<int> NotificacionExitosa { get; set; }
    [Parameter] public EventCallback<Formato> EliminarFormato { get; set; }

    public void EditarFormato()
    {

    }
    
}
