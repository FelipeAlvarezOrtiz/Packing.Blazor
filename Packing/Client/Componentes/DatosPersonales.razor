@using Packing.Shared.Pedidos
@using Packing.Shared.Usuarios
@inject HttpClient Cliente
@inject AuthenticationStateProvider AuthenticationStateProvider

<br />
<h3><i class="fas fa-info"></i>&nbsp;Confirma tus datos</h3>
<br />
@if (UsuarioSolicitante is null)
{
    <MudSkeleton />
    <MudSkeleton Animation="Animation.False" />
    <MudSkeleton Animation="Animation.Wave" />
    <div class="row">
        <div class="col d-flex justify-content-center">
            <p>Cargando información del usuario, espere por favor ...</p>
        </div>
    </div>
}
else
{
    <div class="row ml-1">
        <!--Datos del usuario -->
        <div class="col-md-12 col-lg-6 p-1">
            <MudField Label="Nombre" Variant="Variant.Outlined">@UsuarioSolicitante.NombreUsuario</MudField>
        </div>
        <div class="col-md-12 col-lg-6 p-1">
            <MudField Label="R.U.T" Variant="Variant.Outlined">@UsuarioSolicitante.Empresa.RutEmpresa</MudField>
        </div>
        <div class="col-12 p-1">
            <MudTextField Label="Dirección" Variant="Variant.Outlined" @bind-Value="Direccion">@UsuarioSolicitante.Direccion</MudTextField>
        </div>
    </div>
    <br />
    <hr />
    <div class="row">
        <div class="col-12">
            <MudTextField T="string" Label="Observaciones" Variant="Variant.Outlined" Text="@Observacion" Lines="6" />
        </div>
    </div>
}


@code {
    [Parameter] public string Observacion { get; set; }
	public string Direccion { get; set; }
    protected AppUser UsuarioSolicitante;
    protected PedidoRequestDto PedidoRequest;
    protected ObtenerInfoUsuarioDto requestInfoUsuario;
    protected string emailUsuario = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity != null) emailUsuario = authState.User.Identity.Name;
        requestInfoUsuario = new ObtenerInfoUsuarioDto()
        {
            EmailUsuarioBuscado = emailUsuario,
            UsuarioSolicitante = emailUsuario
        };
        var resultInfo = await Cliente.PostAsJsonAsync("api/Usuarios/ObtenerUsuario", requestInfoUsuario);
        if (resultInfo.IsSuccessStatusCode)
        {
            UsuarioSolicitante = await resultInfo.Content.ReadFromJsonAsync<AppUser>();
            StateHasChanged();
        }
    }

    [Parameter] public EventCallback<Tuple<string, string>> GuardarDatos { get; set; }

}
