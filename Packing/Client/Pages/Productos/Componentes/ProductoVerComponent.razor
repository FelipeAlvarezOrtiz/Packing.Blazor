@inject HttpClient cliente
@inject NavigationManager Navigator

<MudCard Elevation="3" Class="p-3 mt-2">
    <MudCardContent>
        <MudText Typo="Typo.h6">&nbsp;@ProductoBlock.NombreParaBusqueda</MudText>
        <MudDivider />
        <br />
        <MudText><p>Grupo:&nbsp;<b class="text-center">@ProductoBlock.Grupo.NombreGrupo.</b></p></MudText>
        <MudText><p>Formato:&nbsp;<b class="text-center">@ProductoBlock.Formato.NombreFormato.</b></p></MudText>
        <MudText><p>Presentación:&nbsp;<b class="text-center">@ProductoBlock.Presentacion.NombrePresentacion.</b></p></MudText>
    </MudCardContent>
    <MudCardActions>
        <div class="row text-center d-flex align-content-center">
            <div class="col-sm-6 mt-2">
                <MudFab Class="mt-1 ml-2" Color="Color.Error" Size="Size.Medium"
                        Icon="@Icons.Material.Filled.Delete" Label="Borrar" OnClick="(() => BorrarProducto.InvokeAsync(ProductoBlock))">
                </MudFab>
            </div>
            <div class="col-sm-6 mt-2">
                <MudFab Class="mt-1 ml-2" Color="Color.Info" Size="Size.Medium"
                        Icon="@Icons.Material.Filled.NavigateNext" Label="Editar" OnClick="(() => EditarProducto.InvokeAsync(ProductoBlock))">
                </MudFab>
            </div>
        </div>
    </MudCardActions>
</MudCard>

@code {
    [Parameter] public Producto ProductoBlock { get; set; }
    [Parameter] public EventCallback<Producto> EditarProducto { get; set; }
    [Parameter] public EventCallback<Producto> BorrarProducto { get; set; }
}
