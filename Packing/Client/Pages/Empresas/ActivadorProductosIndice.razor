@page "/Empresas/Activador"
@inject HttpClient Cliente
@inject NavigationManager Navigator
@inject IJSRuntime JsRuntime
@attribute [Authorize(Roles = "Administrador")]

<h3><i class="fab fa-creative-commons-share"></i>&nbsp;Activar productos</h3>
<hr />
@if (Empresas is null)
{
	<MudSkeleton />
	<MudSkeleton Animation="Animation.False" />
	<MudSkeleton Animation="Animation.Wave" />
	<div class="row">
		<div class="col d-flex justify-content-center">
			<p>Cargando productos, por favor espere ...</p>
		</div>
	</div>
}
else
{
	<div class="row">
		<div class="col-12">
			<div class="form-group">
				<div class="input-group">
					<MudSelect T="int" @bind-Value="IdEmpresaSeleccionada" Label="Empresa" Strict="true" Variant="Variant.Outlined" Format="F2" AnchorOrigin="Origin.BottomCenter">
						<MudSelectItem T="int" Value="0">Seleccione</MudSelectItem>
						@foreach (var empresa in Empresas)
						{
							<MudSelectItem T="int" Value="empresa.IdEmpresa">@empresa.NombreEmpresa</MudSelectItem>
						}
					</MudSelect>&nbsp;
					<MudTooltip Text="Buscar">
						<MudFab Class="mt-2" Color="Color.Primary" Size="Size.Medium" Icon="@Icons.Material.Filled.Search" OnClick="BuscarProductosEmpresa" />
					</MudTooltip>
				</div>
			</div>
		</div>
	</div>
	<MudDivider />
	@if (ProductosEnSistema is not null && IdEmpresaSeleccionada != 0)
	{
		<div class="row text-center d-flex align-content-center m-2">
			<div class="col-sm-12 mt-2">
				<MudFab Class="mt-1 ml-2" Color="Color.Info" Size="Size.Medium" Icon="@Icons.Material.Filled.Refresh" Label="Actualizar">
				</MudFab>
			</div>
		</div>
		<MudDivider></MudDivider>
		<br />
		<div class="row">
			@foreach (var producto in ProductosEnSistema)
			{
				<div class="col-sm-12 col-md-12 col-lg-6">
					<ActivadorProductosComponent AgregarProductoEmpresa="AgregarProductoEmpresa" EliminarProductoEmpresa="EliminarProducto"
									 CantidadDisponible="0" Incorporado="false" ProductoBlock="producto"></ActivadorProductosComponent>
				</div>
			}
		</div>
	}
	else
	{
		<div class="row">
			<div class="col-12 alert alert-info text-center">
				<h5><i class="fas fa-info-circle"></i>&nbsp; Seleccione una empresa y busque los productos asociados.</h5>
			</div>
		</div>
	}
}

@code {
	protected List<Producto> ProductosEnSistema;
	protected List<Empresa> Empresas;
	protected IJSObjectReference Modulo;
	protected int IdEmpresaSeleccionada = 0;

	protected override async Task OnInitializedAsync()
	{
		ProductosEnSistema = await Cliente.GetFromJsonAsync<List<Producto>>("api/Productos/ObtenerListaProductos");
		Empresas = await Cliente.GetFromJsonAsync<List<Empresa>>("api/Empresas/ObtenerEmpresas");
		StateHasChanged();
	}

	protected async void AgregarProductoEmpresa(Tuple<int, int> request)
	{
		Modulo = await JsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/Utilidades.js");
		await Modulo.InvokeVoidAsync("Exito");
	}

	protected async void EliminarProducto(int idProducto)
	{
		Modulo = await JsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/Utilidades.js");
		await Modulo.InvokeVoidAsync("Exito");
	}

	protected void BuscarProductosEmpresa()
	{

	}
}
